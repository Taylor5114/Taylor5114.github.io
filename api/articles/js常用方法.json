{"title":"js常用方法","uid":"456940ed00435558e02022c8f14ccbe7","slug":"js常用方法","date":"2021-08-29T14:18:53.000Z","updated":"2022-03-04T06:28:10.568Z","comments":true,"path":"api/articles/js常用方法.json","keywords":"無限進步","cover":"http://pic.qingchengkg.cn/img/515","content":"<h3 id=\"js跳转id\"><a href=\"#js跳转id\" class=\"headerlink\" title=\"js跳转id\"></a>js跳转id</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">location.hash&#x3D;&quot;#id&quot;</code></pre>\n\n<h3 id=\"延时\"><a href=\"#延时\" class=\"headerlink\" title=\"延时\"></a>延时</h3><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">setTimeout(()&#x3D;&gt;&#123;\n  location.href &#x3D; &quot;&#x2F;&quot;\n&#125;,1000)</code></pre>\n\n<h3 id=\"提取富文本文字\"><a href=\"#提取富文本文字\" class=\"headerlink\" title=\"提取富文本文字\"></a>提取富文本文字</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">getText(str) &#123;\n  return str\n    .replace(&#x2F;&lt;[^&lt;&gt;]+&gt;&#x2F;g, &quot;&quot;)\n    .replace(&#x2F;&amp;nbsp;&#x2F;gi, &quot;&quot;);\n&#125;,</code></pre>\n\n<h3 id=\"循环截取文本\"><a href=\"#循环截取文本\" class=\"headerlink\" title=\"循环截取文本\"></a>循环截取文本</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">setcontent(arr,num) &#123;\n  for (var i &#x3D; 0; i &lt; arr.length; i++) &#123;\n    if (arr[i].name.length &gt; num) &#123;\n      arr[i].name &#x3D; arr[i].name.slice(0, num) + &#39;...&#39;\n    &#125;\n  &#125;\n&#125;,</code></pre>\n\n<h3 id=\"js拉起本地qq对话框\"><a href=\"#js拉起本地qq对话框\" class=\"headerlink\" title=\"js拉起本地qq对话框\"></a>js拉起本地qq对话框</h3><p>不支持mac</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; 移动端\nmqqwpa:&#x2F;&#x2F;im&#x2F;chat?chat_type&#x3D;wpa&amp;uin&#x3D;QQ号&amp;version&#x3D;1&amp;src_type&#x3D;web&amp;web_src&#x3D;http::&#x2F;&#x2F;wpa.b.qq.com\n&#x2F;&#x2F; pc端\nhttp:&#x2F;&#x2F;wpa.qq.com&#x2F;msgrd?v&#x3D;3&amp;uin&#x3D;QQ号&amp;site&#x3D;在线客服&amp;menu&#x3D;yes</code></pre>\n\n<p>在线聊天(需要目标账号开启在线聊天功能)</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">1、在QQ推广页面上先设置该QQ：http:&#x2F;&#x2F;shang.qq.com&#x2F;v3&#x2F;widget.html\n2、页面上粘贴代码\n&lt;a target&#x3D;&quot;_blank&quot; href&#x3D;&quot;http:&#x2F;&#x2F;wpa.qq.com&#x2F;msgrd?v&#x3D;3&amp;uin&#x3D;1751022481&amp;site&#x3D;qq&amp;menu&#x3D;yes&quot;&gt;&lt;img border&#x3D;&quot;0&quot; src&#x3D;&quot;http:&#x2F;&#x2F;wpa.qq.com&#x2F;pa?p&#x3D;2:1751022481:52&quot; alt&#x3D;&quot;点击这里给我发消息&quot; title&#x3D;&quot;点击这里给我发消息&quot;&#x2F;&gt;&lt;&#x2F;a&gt;</code></pre>\n\n<h3 id=\"时间戳转换\"><a href=\"#时间戳转换\" class=\"headerlink\" title=\"时间戳转换\"></a>时间戳转换</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">timestampToTime(timestamp) &#123;\n      if (timestamp.toString().length &#x3D;&#x3D; 10) &#123;\n        var date &#x3D; new Date(timestamp * 1000); &#x2F;&#x2F;时间戳为10位需*1000，时间戳为13位的话不需乘1000\n      &#125; else &#123;\n        var date &#x3D; new Date(timestamp);\n      &#125;\n      var Y &#x3D; date.getFullYear() + &quot;-&quot;;\n      var M &#x3D;\n        (date.getMonth() + 1 &lt; 10\n          ? &quot;0&quot; + (date.getMonth() + 1)\n          : date.getMonth() + 1) + &quot;-&quot;;\n      var D &#x3D; date.getDate() &gt; 9 ? date.getDate() + &quot; &quot; : &quot;0&quot; + date.getDate() + &quot; &quot;;\n      var h &#x3D;\n        date.getHours() &gt; 9\n          ? date.getHours() + &quot;:&quot;\n          : &quot;0&quot; + date.getHours() + &quot;:&quot;;\n      var m &#x3D;\n        date.getMinutes() &gt; 9\n          ? date.getMinutes() + &quot;:&quot;\n          : &quot;0&quot; + date.getMinutes() + &quot;:&quot;;\n      var s &#x3D;\n        date.getSeconds() &gt; 9 ? date.getSeconds() : &quot;0&quot; + date.getSeconds();\n  \t\tif (Y + M + D + h + m + s &#x3D;&#x3D; &quot;1970-01-01 08:00:00&quot;) &#123;\n        return &quot;-&quot;;\n      &#125;\n      return Y + M + D + h + m + s;\n    &#125;,</code></pre>\n\n<h3 id=\"时间转换为多久前\"><a href=\"#时间转换为多久前\" class=\"headerlink\" title=\"时间转换为多久前\"></a>时间转换为多久前</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">getDateDiff(dateTimeStamp) &#123;\n    &#x2F;&#x2F; 时间字符串转时间戳\n    var timestamp &#x3D; new Date(dateTimeStamp).getTime();\n    \n    var minute &#x3D; 1000 * 60;\n    var hour &#x3D; minute * 60;\n    var day &#x3D; hour * 24;\n    var halfamonth &#x3D; day * 15;\n    var month &#x3D; day * 30;\n    var year &#x3D; day * 365;\n    var now &#x3D; new Date().getTime();\n    var diffValue &#x3D; now - timestamp;\n    var result;\n    if (diffValue &lt; 0) &#123;\n        return;\n    &#125;\n    var yearC &#x3D; diffValue &#x2F; year;\n    var monthC &#x3D; diffValue &#x2F; month;\n    var weekC &#x3D; diffValue &#x2F; (7 * day);\n    var dayC &#x3D; diffValue &#x2F; day;\n    var hourC &#x3D; diffValue &#x2F; hour;\n    var minC &#x3D; diffValue &#x2F; minute;\n    if (yearC &gt;&#x3D; 1) &#123;\n        result &#x3D; &quot;&quot; + parseInt(yearC) + &quot;年前&quot;;\n    &#125; else if (monthC &gt;&#x3D; 1) &#123;\n        result &#x3D; &quot;&quot; + parseInt(monthC) + &quot;月前&quot;;\n    &#125; else if (weekC &gt;&#x3D; 1) &#123;\n        result &#x3D; &quot;&quot; + parseInt(weekC) + &quot;周前&quot;;\n    &#125; else if (dayC &gt;&#x3D; 1) &#123;\n        result &#x3D; &quot;&quot; + parseInt(dayC) + &quot;天前&quot;;\n    &#125; else if (hourC &gt;&#x3D; 1) &#123;\n        result &#x3D; &quot;&quot; + parseInt(hourC) + &quot;小时前&quot;;\n    &#125; else if (minC &gt;&#x3D; 1) &#123;\n        result &#x3D; &quot;&quot; + parseInt(minC) + &quot;分钟前&quot;;\n    &#125; else\n        result &#x3D; &quot;刚刚&quot;;\n    return result;\n&#125;,</code></pre>\n\n<h3 id=\"时间与时间戳相互转换\"><a href=\"#时间与时间戳相互转换\" class=\"headerlink\" title=\"时间与时间戳相互转换\"></a>时间与时间戳相互转换</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 一：时间转时间戳：javascript获得时间戳的方法有五种，都是通过实例化时间对象 new Date() 来进一步获取当前的时间戳\nvar timestamp1 &#x3D; Date.parse(new Date()); &#x2F;&#x2F; 结果：1477808630000 不推荐这种办法，毫秒级别的数值被转化为000\n\n  console.log(timestamp1);\n\nvar timestamp2 &#x3D; (new Date()).valueOf(); &#x2F;&#x2F; 结果：1477808630404 通过valueOf()函数返回指定对象的原始值获得准确的时间戳值\n\nconsole.log(timestamp2);\n\nvar timestamp3 &#x3D; new Date().getTime(); &#x2F;&#x2F; 结果：1477808630404 ，通过原型方法直接获得当前时间的毫秒值，准确\n\nconsole.log(timestamp3);\n\nvar timetamp4 &#x3D; Number(new Date()) ; &#x2F;&#x2F;结果：1477808630404 ,将时间转化为一个number类型的数值，即时间戳\n\nconsole.log(timetamp4);\n\nES5给Date提供了一种获取时间戳的新特性  \nvar timetamp5 &#x3D; Date.now();                   &#x2F;&#x2F;结果：1477808630404 \n\nconsole.log(timetamp5);\n\n&#x2F;&#x2F; 二，时间戳转时间\nvar timestamp4 &#x3D; new Date(1472048779952);&#x2F;&#x2F;直接用 new Date(时间戳) 格式转化获得当前时间\n\nconsole.log(timestamp4);\n\nconsole.log(timestamp4.toLocaleDateString().replace(&#x2F;\\&#x2F;&#x2F;g, &quot;-&quot;) + &quot; &quot; + timestamp4.toTimeString().substr(0, 8)); &#x2F;&#x2F;再利用拼接正则等手段转化为yyyy-MM-dd hh:mm:ss 格式\n&#x2F;*不过这样转换在某些浏览器上会出现不理想的效果，因为toLocaleDateString()方法是因浏览器而异的，比如 IE为2016年8月24日 22:26:19 格式 搜狗为Wednesday, August 24, 2016 22:39:42\n可以通过分别获取时间的年月日进行拼接，比如：*&#x2F;\nfunction getdate() &#123;\n            var now &#x3D; new Date(),\n                y &#x3D; now.getFullYear(),\n                m &#x3D; (&quot;0&quot; + (now.getMonth() + 1)).slice(-2),\n                d &#x3D; (&quot;0&quot; + now.getDate()).slice(-2);\n            return &#96;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125; $&#123;now.toTimeString().substr(0, 8)&#125;&#96;; \n&#125;</code></pre>\n\n<h3 id=\"对象转数组\"><a href=\"#对象转数组\" class=\"headerlink\" title=\"对象转数组\"></a>对象转数组</h3><p>直接转换</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">var arr &#x3D; []\nfor (let i in obj) &#123;\n    let o &#x3D; &#123;&#125;;\n    o[i] &#x3D; obj[i]; &#x2F;&#x2F;即添加了key值也赋了value值 o[i] 相当于o.name 此时i为变量\n    arr.push(o)\n&#125;</code></pre>\n\n<p>拆分属性名、属性值组成数组</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const obj &#x3D; &#123;\n            id:1,\n            name:&#39;zhangsan&#39;,\n            age:18\n    &#125;\nconst arr &#x3D; [];\n    Object.getOwnPropertyNames(obj).forEach(function(key)&#123;\n         \n        var o &#x3D; &#123;&#125;;\no.code &#x3D; key;o.value&#x3D;obj[key];arr.push(o);\n    &#125;)</code></pre>\n\n<p>简单函数封装</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">toarr(obj) &#123;\n  var arr &#x3D; [];\n  Object.getOwnPropertyNames(obj).forEach(function (key) &#123;\n    var o &#x3D; &#123;&#125;;\n    o.code &#x3D; key;\n    o.value &#x3D; obj[key];\n    if (o.code !&#x3D; &quot;__ob__&quot;) &#123;\n      arr.push(o);\n    &#125;\n  &#125;);\n  return arr;\n&#125;</code></pre>\n\n\n\n<h3 id=\"数组格式字符串转数组\"><a href=\"#数组格式字符串转数组\" class=\"headerlink\" title=\"数组格式字符串转数组\"></a>数组格式字符串转数组</h3><h4 id=\"eval-函数\"><a href=\"#eval-函数\" class=\"headerlink\" title=\"eval()函数\"></a>eval()函数</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">var str &#x3D; &#39;[&quot;山西&quot;,&quot;新疆&quot;,&quot;甘肃&quot;,&quot;宁夏&quot;,&quot;青海&quot;]&#39;;\nvar arr &#x3D; eval(&#39;(&#39;+str+&#39;)&#39;);</code></pre>\n\n<pre class=\"line-numbers language-输出\" data-language=\"输出\"><code class=\"language-输出\">console.log(arr)\n&#x2F;&#x2F; [&quot;山西&quot;,&quot;新疆&quot;,&quot;甘肃&quot;,&quot;宁夏&quot;,&quot;青海&quot;]</code></pre>\n\n\n\n<h3 id=\"截取字符串\"><a href=\"#截取字符串\" class=\"headerlink\" title=\"截取字符串\"></a>截取字符串</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 截取字符串最后一个‘&#x2F;’后的所有内容\nitem.file.substr(item.file.lastIndexOf(&quot;&#x2F;&quot;) +1)\n&#x2F;&#x2F; 截取字符串最后一个‘&#x2F;’后的三个字符\nitem.file.substr(item.file.lastIndexOf(&quot;&#x2F;&quot;) +1，3)</code></pre>\n\n\n\n<h3 id=\"获取实时时间\"><a href=\"#获取实时时间\" class=\"headerlink\" title=\"获取实时时间\"></a>获取实时时间</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">setTime() &#123;\n  this.timer &#x3D; setInterval(() &#x3D;&gt; &#123;\n    this.time &#x3D;\n      new Date().getFullYear() +\n      &quot;-&quot; +\n      (new Date().getMonth() + 1) +\n      &quot;-&quot; +\n      new Date().getDate() +\n      &quot; &quot; +\n      new Date().getHours() +\n      &quot;:&quot; +\n      new Date().getMinutes() +\n      &quot;: &quot; +\n      new Date().getSeconds();\n  &#125;, 1000);\n&#125;,</code></pre>\n\n<h3 id=\"对象复制\"><a href=\"#对象复制\" class=\"headerlink\" title=\"对象复制\"></a>对象复制</h3><p>注意：在vue生命周期中调用时 ➕ this</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">deepClone(source) &#123;\n  &#x2F;&#x2F; 判断复制的目标是数组还是对象\n  const targetObj &#x3D; source.constructor &#x3D;&#x3D;&#x3D; Array ? [] : &#123;&#125;;\n  for (const keys in source) &#123;\n    if (source.hasOwnProperty(keys)) &#123;\n      if (source[keys] &amp;&amp; typeof source[keys] &#x3D;&#x3D;&#x3D; &quot;object&quot;) &#123;\n        &#x2F;&#x2F; 如果值是对象，就递归一下\n        targetObj[keys] &#x3D; source[keys].constructor &#x3D;&#x3D;&#x3D; Array ? [] : &#123;&#125;;\n        targetObj[keys] &#x3D; deepClone(source[keys]);\n      &#125; else &#123;\n        &#x2F;&#x2F; 如果不是，就直接赋值\n        targetObj[keys] &#x3D; source[keys];\n      &#125;\n    &#125;\n  &#125;\n  return targetObj;\n&#125;,</code></pre>\n\n<h3 id=\"合并两个对象中相同key的值\"><a href=\"#合并两个对象中相同key的值\" class=\"headerlink\" title=\"合并两个对象中相同key的值\"></a>合并两个对象中相同key的值</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">data() &#123;\n  return &#123;\n    info: &#123;\n      name_cn: &quot;&quot;,\n      name_en: &quot;&quot;,\n      post_addr: &quot;&quot;,\n      man1_name: &quot;&quot;,\n      man1_phone: &quot;&quot;,\n      man1_tel: &quot;&quot;,\n      man1_email: &quot;&quot;,\n      man2_name: &quot;&quot;,\n      man2_phone: &quot;&quot;,\n      man2_tel: &quot;&quot;,\n      man2_email: &quot;&quot;,\n    &#125;,\n  &#125;;\n&#125;,\n  created() &#123;\n    if (this.$route.query.type &#x3D;&#x3D; 1) &#123;\n      this.$api.workProdetails(&#123; id: this.$route.query.id &#125;).then((res) &#x3D;&gt; &#123;\n        Object.keys(this.info).forEach((key) &#x3D;&gt; &#123;\n          if(res.data[key]!&#x3D;&#x3D;undefined)this.info[key] &#x3D; res.data[key];\n        &#125;);\n      &#125;);\n    &#125;\n  &#125;,</code></pre>\n\n<h3 id=\"数组去重\"><a href=\"#数组去重\" class=\"headerlink\" title=\"数组去重\"></a>数组去重</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"> Array.prototype.distinct &#x3D; function () &#123;\n   var arr &#x3D; this,\n       i,\n       j,\n       len &#x3D; arr.length;\n   for (i &#x3D; 0; i &lt; len; i++) &#123;\n     for (j &#x3D; i + 1; j &lt; len; j++) &#123;\n       if (arr[i].id &#x3D;&#x3D; arr[j].id) &#123;\n         arr.splice(j, 1);\n         len--;\n         j--;\n       &#125;\n     &#125;\n   &#125;\n   return arr;\n &#125;;\n&#x2F;&#x2F; 用法\ndata &#x3D; data.distinct()</code></pre>\n\n\n\n","text":"js跳转idlocation.hash&#x3D;&quot;#id&quot; 延时setTimeout(()&#x3D;&gt;&#123; location.href &#x3D; &quot;&#x2F;&quot; &#125;,1000) 提取富文本文字getText...","link":"","photos":[],"count_time":{"symbolsCount":"9.3k","symbolsTime":"8 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#js%E8%B7%B3%E8%BD%ACid\"><span class=\"toc-text\">js跳转id</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BB%B6%E6%97%B6\"><span class=\"toc-text\">延时</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8F%90%E5%8F%96%E5%AF%8C%E6%96%87%E6%9C%AC%E6%96%87%E5%AD%97\"><span class=\"toc-text\">提取富文本文字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E6%88%AA%E5%8F%96%E6%96%87%E6%9C%AC\"><span class=\"toc-text\">循环截取文本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#js%E6%8B%89%E8%B5%B7%E6%9C%AC%E5%9C%B0qq%E5%AF%B9%E8%AF%9D%E6%A1%86\"><span class=\"toc-text\">js拉起本地qq对话框</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">时间戳转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%97%B4%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%A4%9A%E4%B9%85%E5%89%8D\"><span class=\"toc-text\">时间转换为多久前</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%B6%E9%97%B4%E6%88%B3%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">时间与时间戳相互转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">对象转数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E6%A0%BC%E5%BC%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数组格式字符串转数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#eval-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">eval()函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%AA%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">截取字符串</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E5%AE%9E%E6%97%B6%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">获取实时时间</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1%E5%A4%8D%E5%88%B6\"><span class=\"toc-text\">对象复制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%B8%AD%E7%9B%B8%E5%90%8Ckey%E7%9A%84%E5%80%BC\"><span class=\"toc-text\">合并两个对象中相同key的值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D\"><span class=\"toc-text\">数组去重</span></a></li></ol>","author":{"name":"Raver233","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"無限進步","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"無限進步","uid":"d46fcc29b0dde28b8d1c4f47c372964e","slug":"無限進步","date":"2021-09-03T15:51:17.000Z","updated":"2021-09-03T16:06:16.502Z","comments":true,"path":"api/articles/無限進步.json","keywords":"無限進步","cover":"http://pic.qingchengkg.cn/img/517","text":"無限進步","link":"","photos":[],"count_time":{"symbolsCount":4,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Raver233","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"無限進步","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"vuecli","uid":"17520cb522f1660fc075da0158dd8615","slug":"vuecli","date":"2021-08-29T13:43:46.000Z","updated":"2021-10-30T06:17:04.292Z","comments":true,"path":"api/articles/vuecli.json","keywords":"無限進步","cover":"http://pic.qingchengkg.cn/img/518","text":"Vue-cli创建新项目&#x2F;&#x2F; tt cd path &#x2F;&#x2F; vue init webpack name cd name &#x2F;&#x2F; 安装依赖 cnpm install element-ui安装cnpm i element-ui ...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"笔记","slug":"笔记","count":2,"path":"api/tags/笔记.json"}],"author":{"name":"Raver233","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"無限進步","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}