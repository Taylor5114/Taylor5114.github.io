{"title":"Vue3","uid":"3a4eda1192ec992162144e15ab7e2ec5","slug":"Vue3","date":"2021-11-21T08:29:09.000Z","updated":"2021-11-21T10:47:55.097Z","comments":true,"path":"api/articles/Vue3.json","keywords":"無限進步","cover":null,"content":"<h1 id=\"创建Vue3-0工程\"><a href=\"#创建Vue3-0工程\" class=\"headerlink\" title=\"创建Vue3.0工程\"></a>创建Vue3.0工程</h1><h1 id=\"常用的Compositon-API\"><a href=\"#常用的Compositon-API\" class=\"headerlink\" title=\"常用的Compositon API\"></a>常用的Compositon API</h1><h2 id=\"setup\"><a href=\"#setup\" class=\"headerlink\" title=\"setup\"></a>setup</h2><ul>\n<li>理解：vue3.0中一个新的配置项，值为一个函数</li>\n<li>setup是所有Composition API（组合式API）的容器</li>\n<li>组件中所用到的：数据、方法等等，均要配置在setup中</li>\n<li>setup函数的两种返回值：<ul>\n<li>若返回一个对象，则对象中的属性、方法，在模板中均可以直接使用。（重点！）</li>\n<li>若返回一个渲染函数：则可以自定义渲染内容（了解）</li>\n</ul>\n</li>\n<li>注意点：<ul>\n<li>尽量不要与Vue2.x配置混用<ul>\n<li>Vue2.x配置（data、methods、computed…）中可以访问到setup中的属性、方法</li>\n<li>但在setup中不能访问到Vue2.x配置（data、methods…)</li>\n<li>如果有重名 setup优先</li>\n</ul>\n</li>\n<li>setup不能是一个async函数，因为返回值不再是return的对象，而是promise，模板看不到return对象中的属性</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ref函数\"><a href=\"#ref函数\" class=\"headerlink\" title=\"ref函数\"></a>ref函数</h2><ul>\n<li><p>作用：定义一个响应式数据</p>\n</li>\n<li><p>语法：</p>\n<ul>\n<li><p>```javascript<br>const xxx = ref(initValue)</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n- 创建一个包含响应式数据的应用对象（reference对象）\n\n- JS中操作数据：\n\n  - &#96;&#96;&#96;javascript\n    xxx.value</code></pre></li>\n<li><p>模板中读取数据：不需要value，直接：</p>\n<ul>\n<li><pre><code class=\"html\">&lt;p&gt;&#123;&#123;xxx&#125;&#125;&lt;/p&gt;\n</code></pre>\n</li>\n<li></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","feature":true,"text":"创建Vue3.0工程常用的Compositon APIsetup 理解：vue3.0中一个新的配置项，值为一个函数 setup是所有Composition API（组合式API）的容器 组件中所用到的：数据、方法等等，均要配置在setup中 setup函数的两种返回值： 若返回一...","link":"","photos":[],"count_time":{"symbolsCount":624,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"vue vue3","slug":"vue-vue3","count":1,"path":"api/tags/vue-vue3.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAVue3-0%E5%B7%A5%E7%A8%8B\"><span class=\"toc-text\">创建Vue3.0工程</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%9A%84Compositon-API\"><span class=\"toc-text\">常用的Compositon API</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#setup\"><span class=\"toc-text\">setup</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ref%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">ref函数</span></a></li></ol></li></ol>","author":{"name":"Raver233","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"無限進步","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"vue学习笔记","uid":"a6ae49244c61aefa5ffa97d9544305fe","slug":"vue学习笔记","date":"2021-11-07T08:06:12.000Z","updated":"2021-11-18T12:41:35.827Z","comments":true,"path":"api/articles/vue学习笔记.json","keywords":"無限進步","cover":null,"text":"基础$nextTick作用：在下一次DOM更新结束后执行其指定的回调 用法：常用于改变数据后，要基于更新后的DOM进行某些操作时，要在nextTick的回调中执行 &#x2F;&#x2F; 语法 this.$nextTick(callback()) 路由生命周期钩子activat...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[],"tags":[{"name":"vue","slug":"vue","count":1,"path":"api/tags/vue.json"}],"author":{"name":"Raver233","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"無限進步","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}